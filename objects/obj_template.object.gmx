<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Template layout
month=1 // for using time
counter=0 // time counter
eachMonth=1 // ticks per month
tp_change=777 // third party change of state randomiser
makeDeal=0 // state machine for making deals
investmentCash=1000000 // starting cash
getDeal=""  // for replying to deal option
negotiateDeal="" // for replying to negotiate option
dealsMade=0
randomize()

for (n=0;n&lt;1000;n+=1) // a nice bank of possibilities
    {

    name[n]="" // name of person &lt;- this can be random from a list
    
    // the following are tied
    dealt[n]=false
    dealtAmount[n]=0 
    dealtPercentage[n]=0
    investeeName[n]=""
    investementLevel[n]=0 // the level (range of investment)
    businessName[n]="" // buisness name
    businessDesc[n]="" // description
    businessYears[n]=0 // can be 1,3 or 5 years 
    thirdPartyA[n]=""
    thirdPartyArisk[n]=0 // 0 is green , 1 is orange, 2 is red
    thirdPartyB[n]=""
    thirdPartyBrisk[n]=0 // 0 is green , 1 is orange, 2 is red
    thirdPartyC[n]=""
    thirdPartyCrisk[n]=0 // 0 is green , 1 is orange, 2 is red
    // end of tied
    
    // can be random range based on level
    askingAmount[n]=0 // amount needed
    
    // can be random range based on level
    percentAmount[n]=0 // percentage amount
    percentMax[n]=0 // maximum percentage
    percentMaxRisk[n]=0 // this is calucalted by looking at 3rd party elements and acting as a higher limit
    initMonth[n]=0 // initialised month
    // ** NOTES
    // percentMaxRisk = thirdPartyArisk[n]*5 + thirdPartyBrisk[n]*5 + thirdPartyCrisk[n]*5 = a possible additional 30% given away depending of riskyness
    // range(percentAmount , percentMax+percentMaxRisk)
    // ** END OF NOTES
    }
    


// Third Party setup.. These are the kind of General things a business could be affected by


tp_env="Environment" // if the environment is poor, it can affect the ability to get natural resources
tp_env_level=0 // 0 is green, 1 is orange, 2 is red

tp_ind="Industry" // if industry is poor, it can affect the ability to get mass manufacturing done
tp_ind_level=0 // 0 is green, 1 is orange, 2 is red

tp_reg="Regulation" // if regulation is poor, it can affect the ability to do anything food or animal related
tp_reg_level=0 // 0 is green, 1 is orange, 2 is red

tp_res="Resources" // if rousources are poor, it can affect the ability to produce anything inventive
tp_res_level=0 // 0 is green, 1 is orange, 2 is red

tp_sci="Science" // if science is poor, it can affect the ability to prove a new idea or lucrative venture
tp_sci_level=0 // 0 is green, 1 is orange, 2 is red

tp_tec="Technology" // if technology is poor, it can affect the ability to run a small-medium business
tp_tec_level=0 // 0 is green, 1 is orange, 2 is red

tp_tra="Transport" // if transport is poor, it can affect the logistics of a business dependant on transportation of goods
tp_tra_level=0 // 0 is green, 1 is orange, 2 is red

tp_med="Media" // if media is poor, it can affect the ability to advertise or market a business that is media focussed
tp_med_level=0 // 0 is green, 1 is orange, 2 is red

tp_pol="Politics" // if politics is poor, it can affect the ability to negotiate
tp_pol_level=0 // 0 is green, 1 is orange, 2 is red

tp_eco="Economy" // if the economy is poor, it can affect the ability to make profit each year that it is so.
tp_eco_level=0 // 0 is green, 1 is orange, 2 is red


// DATA
// separate with one ';' , a double ';;' at the end works to finalise the names
n1="Bob McDoosh;Sandra Gift;Jack Middleton;Jim Olay;Stephanie Allen;Louise French;John Pollock;Barbara Jackson;Colin Ramey;Geoff Hunt;Carl Anderson;Frederic Barton;"
n2="Lizzy Cook;Peter Lewinski;Andy Lockhart;Brian Pattison;Claire Wright;Dennis Iams;Eugene Salas;Fiona Wilson;Gary Moore;Hilary Macdonald;Ian Wilcox;Jenny Timpson;"
n3="Kathy Morrison;Liam Nixon;Maria Mullen;Norman Day;Paul Wild;Ray Walton;Samantha Crawford;Travis Ford;Vally Lovejoy;William Buck;Wendy Hunter;Jill Pesci;Oli Smith;"
n4="Phil Rich;Grace Simpleton;Rob Razmex;Tez Bergens;Guy Woods;Solemn Ellis;Ivan Moles;Craig Hicks;Jimmy Silvera;Ellen Boyle;Peter McKnight;Micheal Donaldson;Tracy Mills;;"
names=n1+n2+n3+n4 // condense

// read in names from the above string
var marker=1
var i=0
for (a=1;a&lt;string_length(names);a+=1)
    {
    if string_char_at(names,a)=";"  {name[i]=string_copy(names,marker,a-marker);marker=a+1;i++}
    numberOfNames=i
    }
    


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create businesses

// CONSTRUCTOR

// **** BUSINESS 0 **** 
n=0;
    investeeName[n]=name[round(random(numberOfNames))]    
    investementLevel[n]=1 // Level 1, the basics
    businessName[n]="Fitness Finders" // buisness name
    businessDesc[n]="A Startup fitness company looking for intial invstent for facilities, staff and equiptment" // description
    businessYears[n]=5 // can be 1,3 or 5 years 
    thirdPartyA[n]=tp_med
    thirdPartyArisk[n]=tp_med_level // 0 is green , 1 is orange, 2 is red
    thirdPartyB[n]=tp_eco
    thirdPartyBrisk[n]=tp_eco_level // 0 is green , 1 is orange, 2 is red
    thirdPartyC[n]=""
    thirdPartyCrisk[n]=0 // 0 is green , 1 is orange, 2 is red
    // end of business idea
    
    // can be random range based on level
    askingAmount[n]=round(random_range(20,30))*(1000*investementLevel[n]) // amount needed
    
    // percentage system
    percentAmount[n]=15 // percentage amount
    percentMax[n]=30 // maximum percentage
    percentMaxRisk[n]=(thirdPartyArisk[n]+thirdPartyBrisk[n]+thirdPartyCrisk[n])*5 // this is calucalted by looking at 3rd party elements and acting as a higher limit


// **** BUSINESS 1 ****

n=1;
    investeeName[n]=name[round(random(numberOfNames))]    
    investementLevel[n]=1 // Level 1, the basics
    businessName[n]="Helicopter Tours" // buisness name
    businessDesc[n]="A Helicopter tour company looking for investment" // description
    businessYears[n]=3 // can be 1,3 or 5 years 
    thirdPartyA[n]=tp_env
    thirdPartyArisk[n]=tp_env_level // 0 is green , 1 is orange, 2 is red
    thirdPartyB[n]=tp_eco
    thirdPartyBrisk[n]=tp_eco_level // 0 is green , 1 is orange, 2 is red
    thirdPartyC[n]=tp_tra
    thirdPartyCrisk[n]=tp_tra_level // 0 is green , 1 is orange, 2 is red
    // end of business idea
    
    // can be random range based on level
    askingAmount[n]=round(random_range(20,30))*(1000*investementLevel[n]) // amount needed
    
    // percentage system
    percentAmount[n]=10 // percentage amount
    percentMax[n]=35 // maximum percentage
    percentMaxRisk[n]=(thirdPartyArisk[n]+thirdPartyBrisk[n]+thirdPartyCrisk[n])*5 // this is calucalted by looking at 3rd party elements and acting as a higher limit

// TERRY WE NEED ME OF THESE :)
// **** BUSINESS 2 - BLANK ****

n=2; // change this first
    investeeName[n]=name[round(random(numberOfNames))]    
    investementLevel[n]=1 // Level 1, the basics
    businessName[n]="Business" // buisness name
    businessDesc[n]="A sentence to describe it (about 25 words max)" // description
    businessYears[n]=1 // can be 1,3 or 5 years 
    thirdPartyA[n]=tp_env
    thirdPartyArisk[n]=tp_env_level // see init for definitions
    
    thirdPartyB[n]=tp_reg
    thirdPartyBrisk[n]=tp_reg_level // 0 is green , 1 is orange, 2 is red
    
    thirdPartyC[n]=tp_eco
    thirdPartyCrisk[n]=tp_tra_level // 0 is green , 1 is orange, 2 is red
    // end of business idea
    
    // can be random range based on level
    askingAmount[n]=round(random_range(20,30))*(1000*investementLevel[n]) // amount needed change the 20,30 to something applicable (in thousands of dollars)
    
    // percentage system
    percentAmount[n]=10 // percentage amount
    percentMax[n]=35 // maximum percentage
    // Below is a calculation formula, keep as is.
    percentMaxRisk[n]=(thirdPartyArisk[n]+thirdPartyBrisk[n]+thirdPartyCrisk[n])*5 // this is calucalted by looking at 3rd party elements and acting as a higher limit
    
    // **** BUSINESS 3 - BLANK ****

n=3; // change this first
    investeeName[n]=name[round(random(numberOfNames))]    
    investementLevel[n]=1 // Level 1, the basics
    businessName[n]="Business" // buisness name
    businessDesc[n]="A sentence to describe it (about 25 words max)" // description
    businessYears[n]=1 // can be 1,3 or 5 years 
    thirdPartyA[n]=tp_env
    thirdPartyArisk[n]=tp_env_level // see init for definitions
    
    thirdPartyB[n]=tp_eco
    thirdPartyBrisk[n]=tp_eco_level // 0 is green , 1 is orange, 2 is red
    
    thirdPartyC[n]=tp_tra
    thirdPartyCrisk[n]=tp_tra_level // 0 is green , 1 is orange, 2 is red
    // end of business idea
    
    // can be random range based on level
    askingAmount[n]=round(random_range(20,30))*(1000*investementLevel[n]) // amount needed change the 20,30 to something applicable (in thousands of dollars)
    
    // percentage system
    percentAmount[n]=10 // percentage amount
    percentMax[n]=35 // maximum percentage
    // Below is a calculation formula, keep as is.
    percentMaxRisk[n]=(thirdPartyArisk[n]+thirdPartyBrisk[n]+thirdPartyCrisk[n])*5 // this is calucalted by looking at 3rd party elements and acting as a higher limit
    
// Do not alter anything Below..    
n=0; // used for indexing do not remove
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// increase time and do any other tweaks
counter+=1
if counter&gt;=eachMonth*room_speed // one month
    {
    month+=1
    counter=0
    // each party get diminished by the percentage of chance that it has inherited
    if 1=clamp(round(random(50+tp_env_level*20)),1,200)
    if tp_env_level&gt;-3 tp_env_level-=1
    if 1=clamp(round(random(50+tp_ind_level*20)),1,200)
    if tp_ind_level&gt;-3 tp_ind_level-=1
    if 1=clamp(round(random(50+tp_reg_level*20)),1,200)
    if tp_reg_level&gt;-3 tp_reg_level-=1
    if 1=clamp(round(random(50+tp_res_level*20)),1,200)
    if tp_res_level&gt;-3 tp_res_level-=1
    if 1=clamp(round(random(50+tp_sci_level*20)),1,200)
    if tp_sci_level&gt;-3 tp_sci_level-=1 
    if 1=clamp(round(random(50+tp_tec_level*20)),1,200)
    if tp_tec_level&gt;-3 tp_tec_level-=1  
    if 1=clamp(round(random(50+tp_tra_level*20)),1,200)
    if tp_tra_level&gt;-3 tp_tra_level-=1
    if 1=clamp(round(random(50+tp_med_level*20)),1,200)
    if tp_med_level&gt;-3 tp_med_level-=1 
    if 1=clamp(round(random(50+tp_pol_level*20)),1,200)
    if tp_pol_level&gt;-3 tp_pol_level-=1 
    if 1=clamp(round(random(50+tp_eco_level*20)),1,200)
    if tp_eco_level&gt;-3 tp_eco_level-=1 
    }
    
/* THESE WILL NOW BE TAPPED INTO DIRECTLY VIA A DEAL THAT IS CONNECTED TO THEM
  
*/
//update all businesses with this info...

for (nn=0;nn&lt;1000;nn+=1)
    {
    
    if thirdPartyA[nn]=tp_env thirdPartyArisk[nn]=tp_env_level
    if thirdPartyA[nn]=tp_ind thirdPartyArisk[nn]=tp_ind_level
    if thirdPartyA[nn]=tp_reg thirdPartyArisk[nn]=tp_reg_level
    if thirdPartyA[nn]=tp_res thirdPartyArisk[nn]=tp_res_level
    if thirdPartyA[nn]=tp_sci thirdPartyArisk[nn]=tp_sci_level
    if thirdPartyA[nn]=tp_tec thirdPartyArisk[nn]=tp_tec_level
    if thirdPartyA[nn]=tp_tra thirdPartyArisk[nn]=tp_tra_level
    if thirdPartyA[nn]=tp_med thirdPartyArisk[nn]=tp_med_level
    if thirdPartyA[nn]=tp_pol thirdPartyArisk[nn]=tp_pol_level
    if thirdPartyA[nn]=tp_eco thirdPartyArisk[nn]=tp_eco_level
    
    if thirdPartyB[nn]=tp_env thirdPartyBrisk[nn]=tp_env_level
    if thirdPartyB[nn]=tp_ind thirdPartyBrisk[nn]=tp_ind_level
    if thirdPartyB[nn]=tp_reg thirdPartyBrisk[nn]=tp_reg_level
    if thirdPartyB[nn]=tp_res thirdPartyBrisk[nn]=tp_res_level
    if thirdPartyB[nn]=tp_sci thirdPartyBrisk[nn]=tp_sci_level
    if thirdPartyB[nn]=tp_tec thirdPartyBrisk[nn]=tp_tec_level
    if thirdPartyB[nn]=tp_tra thirdPartyBrisk[nn]=tp_tra_level
    if thirdPartyB[nn]=tp_med thirdPartyBrisk[nn]=tp_med_level
    if thirdPartyB[nn]=tp_pol thirdPartyBrisk[nn]=tp_pol_level
    if thirdPartyB[nn]=tp_eco thirdPartyBrisk[nn]=tp_eco_level
    
    if thirdPartyC[nn]=tp_env thirdPartyCrisk[nn]=tp_env_level
    if thirdPartyC[nn]=tp_ind thirdPartyCrisk[nn]=tp_ind_level
    if thirdPartyC[nn]=tp_reg thirdPartyCrisk[nn]=tp_reg_level
    if thirdPartyC[nn]=tp_res thirdPartyCrisk[nn]=tp_res_level
    if thirdPartyC[nn]=tp_sci thirdPartyCrisk[nn]=tp_sci_level
    if thirdPartyC[nn]=tp_tec thirdPartyCrisk[nn]=tp_tec_level
    if thirdPartyC[nn]=tp_tra thirdPartyCrisk[nn]=tp_tra_level
    if thirdPartyC[nn]=tp_med thirdPartyCrisk[nn]=tp_med_level
    if thirdPartyC[nn]=tp_pol thirdPartyCrisk[nn]=tp_pol_level
    if thirdPartyC[nn]=tp_eco thirdPartyCrisk[nn]=tp_eco_level
    
    percentMaxRisk[nn]=(thirdPartyArisk[nn]+thirdPartyBrisk[nn]+thirdPartyCrisk[nn])*5
    
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User Input

if keyboard_check_pressed(vk_right) 
    {
    n+=1
    }
    
if keyboard_check_pressed(vk_left) 
    {
    if n&gt;0 n-=1
    }
    
if keyboard_check_pressed(ord('R'))
    {
    game_restart()
    }
    
if keyboard_check_pressed(vk_space)
    {
    makeDeal=1
    }
    

    
    
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check and update deals made
if makeDeal=1 and dealt[n]=false and investeeName[n]!=""
    {
    getDeal=get_string("Do you want to make a deal? (Yes/No) (say No to negotiate)","Y/N")
    if getDeal="Yes" or getDeal="Y"
        {
        // accepted main deal
        dealsMade+=1
        timeStamp[dealsMade]=month  
        invested[dealsMade]=askingAmount[n] // for the player
        percentage[dealsMade]=percentAmount[n] // whats our cut?
        term[dealsMade]=businessYears[n]*12 // number of months
        investmentCash-=askingAmount[n] // reduce cash u have
        dealtAmount[n]=askingAmount[n]
        dealtPercentage[n]=percentAmount[n]
        // affect supported companies one off
        
        // global updates to third parites
        
        
        if thirdPartyA[n]=tp_env tp_env_level+=1
        if thirdPartyA[n]=tp_ind tp_ind_level+=1
        if thirdPartyA[n]=tp_reg tp_reg_level+=1
        if thirdPartyA[n]=tp_res tp_res_level+=1
        if thirdPartyA[n]=tp_sci tp_sci_level+=1
        if thirdPartyA[n]=tp_tec tp_tec_level+=1
        if thirdPartyA[n]=tp_tra tp_tra_level+=1
        if thirdPartyA[n]=tp_med tp_med_level+=1
        if thirdPartyA[n]=tp_pol tp_pol_level+=1
        if thirdPartyA[n]=tp_eco tp_eco_level+=1
        
        if thirdPartyB[n]=tp_env tp_env_level+=1
        if thirdPartyB[n]=tp_ind tp_ind_level+=1
        if thirdPartyB[n]=tp_reg tp_reg_level+=1
        if thirdPartyB[n]=tp_res tp_res_level+=1
        if thirdPartyB[n]=tp_sci tp_sci_level+=1
        if thirdPartyB[n]=tp_tec tp_tec_level+=1
        if thirdPartyB[n]=tp_tra tp_tra_level+=1
        if thirdPartyB[n]=tp_med tp_med_level+=1
        if thirdPartyB[n]=tp_pol tp_pol_level+=1
        if thirdPartyB[n]=tp_eco tp_eco_level+=1
        
        if thirdPartyC[n]=tp_env tp_env_level+=1
        if thirdPartyC[n]=tp_ind tp_ind_level+=1
        if thirdPartyC[n]=tp_reg tp_reg_level+=1
        if thirdPartyC[n]=tp_res tp_res_level+=1
        if thirdPartyC[n]=tp_sci tp_sci_level+=1
        if thirdPartyC[n]=tp_tec tp_tec_level+=1
        if thirdPartyC[n]=tp_tra tp_tra_level+=1
        if thirdPartyC[n]=tp_med tp_med_level+=1
        if thirdPartyC[n]=tp_pol tp_pol_level+=1
        if thirdPartyC[n]=tp_eco tp_eco_level+=1
        
        
        dealt[n]=true // for the investee (flag)
        getDeal=""
        }
    if getDeal="No" or getDeal="N"
        {
        negotiateDeal=get_string("Do you want to negotiate a deal? (Yes/No)","Y/N")
        }   
    if negotiateDeal="Yes" or negotiateDeal="Y"
        {
        var amount, percent;
        amount=get_string("How much are you offering?",string(askingAmount[n]))
        percent=get_string("For what Percentage?",string(percentAmount[n]))
        // now check to see if it is in range...
        if real(percent)&gt;=percentAmount[n] and  real(percent)&lt;=percentMaxRisk[n]+percentMax[n] and real(amount)&gt;=(askingAmount[n]) and real(amount)&lt;=((askingAmount[n])+((askingAmount[n])*(percentAmount[n]/100)))
            {
            // agree the deal
            dealsMade+=1
            timeStamp[dealsMade]=month
            invested[dealsMade]=real(amount)
            percentage[dealsMade]=real(percent) // whats our cut?
            term[dealsMade]=businessYears[n]*12 // number of months
            investmentCash-=real(amount) // reduce cash u have
            dealtAmount[n]=real(amount)
            dealtPercentage[n]=real(percent)
            // affect supported companies one off
            // global updates to third parites
        
            if thirdPartyA[n]=tp_env tp_env_level+=1
            if thirdPartyA[n]=tp_ind tp_ind_level+=1
            if thirdPartyA[n]=tp_reg tp_reg_level+=1
            if thirdPartyA[n]=tp_res tp_res_level+=1
            if thirdPartyA[n]=tp_sci tp_sci_level+=1
            if thirdPartyA[n]=tp_tec tp_tec_level+=1
            if thirdPartyA[n]=tp_tra tp_tra_level+=1
            if thirdPartyA[n]=tp_med tp_med_level+=1
            if thirdPartyA[n]=tp_pol tp_pol_level+=1
            if thirdPartyA[n]=tp_eco tp_eco_level+=1
            
            if thirdPartyB[n]=tp_env tp_env_level+=1
            if thirdPartyB[n]=tp_ind tp_ind_level+=1
            if thirdPartyB[n]=tp_reg tp_reg_level+=1
            if thirdPartyB[n]=tp_res tp_res_level+=1
            if thirdPartyB[n]=tp_sci tp_sci_level+=1
            if thirdPartyB[n]=tp_tec tp_tec_level+=1
            if thirdPartyB[n]=tp_tra tp_tra_level+=1
            if thirdPartyB[n]=tp_med tp_med_level+=1
            if thirdPartyB[n]=tp_pol tp_pol_level+=1
            if thirdPartyB[n]=tp_eco tp_eco_level+=1
            
            if thirdPartyC[n]=tp_env tp_env_level+=1
            if thirdPartyC[n]=tp_ind tp_ind_level+=1
            if thirdPartyC[n]=tp_reg tp_reg_level+=1
            if thirdPartyC[n]=tp_res tp_res_level+=1
            if thirdPartyC[n]=tp_sci tp_sci_level+=1
            if thirdPartyC[n]=tp_tec tp_tec_level+=1
            if thirdPartyC[n]=tp_tra tp_tra_level+=1
            if thirdPartyC[n]=tp_med tp_med_level+=1
            if thirdPartyC[n]=tp_pol tp_pol_level+=1
            if thirdPartyC[n]=tp_eco tp_eco_level+=1
            dealt[n]=true // for the investee (flag)
            getDeal=""
            //
            }
        else
            {
            // NO DEAL
            makeDeal=0
            }
        
        }

    }
else
    {
    makeDeal=0
    }
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Main for drawing

draw_set_color(c_white)
draw_set_font(Small_Font)


// Name Debug
/*
for (n=0;n&lt;50;n+=1)
    {
    draw_text(0,15*n,name[n]+"  "+string(n+1))
    }
draw_text(200,0,string(numberOfNames))
*/


draw_text(0,200,"MONTH: "+string(month)+" of 120")
draw_text(0,230,"CASH $"+string(investmentCash))

draw_text(0,260,"Arrow Keys to cycle current deals.. Space to make a deal, Press 'R' to restart test")

if dealt[n]=false
    {

    draw_text(0,0,"Investee Name: "+string(investeeName[n]))
    draw_text(0,10,"Business Level: "+string(investementLevel[n]))
    draw_text(0,20,"Business Name: "+string(businessName[n]))
    draw_text(0,30,"Business Descritption: "+string(businessDesc[n]))
    //draw_text(0,40,"Term Time: "+string(businessYears[n])+" years") // Doing away with this...
    draw_text(0,60,"Asking amount is $"+string(askingAmount[n])+" for "+string(percentAmount[n])+"%")
    
    if thirdPartyArisk[n]&lt;-2 draw_set_color(make_colour_rgb(128,0,128)) 
    if thirdPartyArisk[n]=-2 draw_set_color(make_colour_rgb(255,0,0)) 
    if thirdPartyArisk[n]=-1 draw_set_color(make_colour_rgb(255,128,0)) 
    if thirdPartyArisk[n]=0 draw_set_color(make_colour_rgb(255,255,0)) // -2,-1,0,1,2 * 20 as an offset to a 50 sided dice as a chance of chaing for the worst (diminish)
    if thirdPartyArisk[n]=1 draw_set_color(make_colour_rgb(128,255,0))
    if thirdPartyArisk[n]=2 draw_set_color(make_colour_rgb(0,255,0)) 
    if thirdPartyArisk[n]&gt;2 draw_set_color(make_colour_rgb(0,255,128)) 
    draw_text(0,80,"Third Party A: "+string(thirdPartyA[n]))
    if thirdPartyBrisk[n]&lt;-2 draw_set_color(make_colour_rgb(128,0,128)) 
    if thirdPartyBrisk[n]=-2 draw_set_color(make_colour_rgb(255,0,0)) 
    if thirdPartyBrisk[n]=-1 draw_set_color(make_colour_rgb(255,128,0)) 
    if thirdPartyBrisk[n]=0 draw_set_color(make_colour_rgb(255,255,0)) // -2,-1,0,1,2 * 20 as an offset to a 50 sided dice as a chance of chaing for the worst (diminish)
    if thirdPartyBrisk[n]=1 draw_set_color(make_colour_rgb(128,255,0))
    if thirdPartyBrisk[n]=2 draw_set_color(make_colour_rgb(0,255,0)) 
    if thirdPartyBrisk[n]&gt;2 draw_set_color(make_colour_rgb(0,255,128)) 
    draw_text(250,80,"Third Party B: "+string(thirdPartyB[n]))
    if thirdPartyCrisk[n]&lt;-2 draw_set_color(make_colour_rgb(128,0,128))
    if thirdPartyCrisk[n]=-2 draw_set_color(make_colour_rgb(255,0,0)) 
    if thirdPartyCrisk[n]=-1 draw_set_color(make_colour_rgb(255,128,0)) 
    if thirdPartyCrisk[n]=0 draw_set_color(make_colour_rgb(255,255,0)) // -2,-1,0,1,2 * 20 as an offset to a 50 sided dice as a chance of chaing for the worst (diminish)
    if thirdPartyCrisk[n]=1 draw_set_color(make_colour_rgb(128,255,0))
    if thirdPartyCrisk[n]=2 draw_set_color(make_colour_rgb(0,255,0)) 
    if thirdPartyCrisk[n]&gt;2 draw_set_color(make_colour_rgb(0,255,128)) 
    draw_text(500,80,"Third Party C: "+string(thirdPartyC[n]))
    // end of business idea
    }
else
    {
    draw_text(0,0,"Deal Made with "+string(investeeName[n]))
    draw_text(0,10,"Invested : "+string(dealtAmount[n])+" for "+string(dealtPercentage[n])+"%")
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DEBUG
    draw_set_color(c_blue)
    //draw_text(0,100,"DEBUG INFO:")
    //draw_text(0,120,"Max percentage  : "+string(percentMax[n])+"%")
    //draw_text(0,130,"Max Risk Based% : "+string(percentMaxRisk[n]+percentMax[n])+"%")

    var yy=280
draw_text(0,yy,"Environment") // if the environment is poor, it can affect the ability to get natural resources
yy+=10
draw_text(0,yy,string(tp_env_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Industry") // if industry is poor, it can affect the ability to get mass manufacturing done
yy+=10
draw_text(0,yy,string(tp_ind_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Regulation")// if regulation is poor, it can affect the ability to do anything food or animal related
yy+=10
draw_text(0,yy,string(tp_reg_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Resources")// if rousources are poor, it can affect the ability to produce anything inventive
yy+=10
draw_text(0,yy,string(tp_res_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Science")// if science is poor, it can affect the ability to prove a new idea or lucrative venture
yy+=10
draw_text(0,yy,string(tp_sci_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Technology")// if technology is poor, it can affect the ability to run a small-medium business
yy+=10
draw_text(0,yy,string(tp_tec_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Transport")// if transport is poor, it can affect the logistics of a business dependant on transportation of goods
yy+=10
draw_text(0,yy,string(tp_tra_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Media")// if media is poor, it can affect the ability to advertise or market a business that is media focussed
yy+=10
draw_text(0,yy,string(tp_med_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Politics")// if politics is poor, it can affect the ability to negotiate
yy+=10
draw_text(0,yy,string(tp_pol_level)) // 0 is green, 1 is orange, 2 is red
yy+=10
draw_text(0,yy,"Economy")// if the economy is poor, it can affect the ability to make profit each year that it is so.
yy+=10
draw_text(0,yy,string(tp_eco_level)) // 0 is green, 1 is orange, 2 is red
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
