<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Template layout

for (n=0;n&lt;10000;n+=1) // a nice bank of possibilities
    {

    name[n]="" // name of person &lt;- this can be random from a list
    
    // the following are tied
    investementLevel[n]=0 // the level (range of investment)
    businessName[n]="" // buisness name
    businessDesc[n]="" // description
    businessYears[n]=0 // can be 1,3 or 5 years 
    thirdPartyA[n]=""
    thirdPartyArisk[n]=0 // 0 is green , 1 is orange, 2 is red
    thirdPartyB[n]=""
    thirdPartyBrisk[n]=0 // 0 is green , 1 is orange, 2 is red
    thirdPartyC[n]=""
    thirdPartyCrisk[n]=0 // 0 is green , 1 is orange, 2 is red
    // end of tied
    
    // can be random range based on level
    askingAmount[n]=0 // amount needed
    
    // can be random range based on level
    percentAmount[n]=0 // percentage amount
    percentMax[n]=0 // maximum percentage
    percentMaxRisk[n]=0 // this is calucalted by looking at 3rd party elements and acting as a higher limit
    // ** NOTES
    // percentMaxRisk = thirdPartyArisk[n]*5 + thirdPartyBrisk[n]*5 + thirdPartyCrisk[n]*5 = a possible additional 30% given away depending of riskyness
    // range(percentAmount , percentMax+percentMaxRisk)
    // ** END OF NOTES
    }
    


// Third Partys Array setup.. These are the kind of General things a business could be affected by

for (m=0;m&lt;100;m+=1)
    {
    thirdParty[m]=""
    thirdPartylevel[m]=0
    }

thirdParty[1]="Environment" // if the environment is poor, it can affect the ability to get natural resources
thirdPartylevel[1]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[2]="Industry" // if industry is poor, it can affect the ability to get mass manufacturing done
thirdPartylevel[2]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[3]="Regulation" // if regulation is poor, it can affect the ability to do anything food or animal related
thirdPartylevel[3]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[4]="Resources" // if rousources are poor, it can affect the ability to produce anything inventive
thirdPartylevel[4]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[5]="Science" // if science is poor, it can affect the ability to prove a new idea or lucrative venture
thirdPartylevel[5]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[6]="Technology" // if technology is poor, it can affect the ability to run a small-medium business
thirdPartylevel[6]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[7]="Transport" // if transport is poor, it can affect the logistics of a business dependant on transportation of goods
thirdPartylevel[7]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[8]="Media" // if media is poor, it can affect the ability to advertise or market a business that is media focussed
thirdPartylevel[8]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[9]="Politics" // if politics is poor, it can affect the ability to negotiate
thirdPartylevel[9]=0 // 0 is green, 1 is orange, 2 is red

thirdParty[10]="Economy" // if the economy is poor, it can affect the ability to make profit each year that it is so.
thirdPartylevel[10]=0 // 0 is green, 1 is orange, 2 is red
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
