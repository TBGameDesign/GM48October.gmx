<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_invSheet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// shader stuff
samp_mask_tex = shader_get_sampler_index(shd_masker, "s_maskMap");
bg_Mask_Tex = background_get_texture(bg_mask);
surf = surface_create(room_width, room_height);

// we need to catch all the investments made... so lets do an array
for(a=0;a&lt;1000;a+=1)
    {
    invMadeName[a]=""
    invMadeVal[a]=0
    invMadePerc[a]=0
    invMadeFC[a]=0
    invMadeStatus[a]=0
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


// lets update the investments data...
var slot=0;

for(a=0;a&lt;1000;a+=1)
    {
    if name[a]&lt;&gt;"" // someone...
        {
        invMadeName[slot]=businessName[a]
        invMadePerc[slot]=dealtPercentage[a]
        invMadeVal[slot]=askingAmount[a] / ( percentAmount[a] / 100 );
        invMadeFC[slot]=profits[a]
        if sold[a]=true invMadeStatus[slot]=2 // will be shown last in the list
        if sold[a]=false and profits[a]&lt;0 invMadeStatus[slot]=1 // will be shown mid in the list
        if sold[a]=false and profits[a]&gt;0 invMadeStatus[slot]=0 // will be shown start in the list
        slot+=1
        }
    }
    

    
surface_set_target(surf);
draw_clear_alpha(c_white,0);
// draw the info

for(b=0;b&lt;slot;b+=1)
    {
    draw_text(200,195+(b*15),string(invMadeName[b]))
    }
    
draw_sprite(spr_begin,0,mouse_x,mouse_y);


surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_sprite(spr_exit,0,785,102) // draw exit

shader_set(shd_masker);
texture_set_stage(samp_mask_tex , bg_Mask_Tex );
draw_surface(surf,0,0)
shader_reset();

if mouse_check_button_pressed(mb_left)
    {
    if mouse_x&gt;784 and mouse_x&lt;802
        {
        if mouse_y&gt;100 and mouse_y&lt;118
            {
            with (self){instance_destroy()}
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
